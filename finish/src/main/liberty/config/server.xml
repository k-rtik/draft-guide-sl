<server description="Social Login Guide Server">
    <featureManager>
        <feature>jaxrs-2.1</feature>
        <feature>appSecurity-3.0</feature>
        <feature>transportSecurity-1.0</feature>
        <feature>socialLogin-1.0</feature>
        <feature>ssl-1.0</feature>
        <feature>jwt-1.0</feature>
    </featureManager>

    <httpEndpoint httpPort="${default.http.port}" httpsPort="${default.https.port}"
                  id="defaultHttpEndpoint" host="localhost" />

    <!-- Set up default key store, trust stores for auth APIs -->
    <keyStore id="defaultKeyStore" location="${server.output.dir}/resources/security/key.p12" password="changeit" type="PKCS12" />
    <keyStore id="socialLoginKeyStore" location="${server.output.dir}/resources/security/slts.p12" password="changeit" type="PKCS12" />

    <!-- SSL configuration for auth services -->
    <ssl id="authServiceSslRef" keyStoreRef="defaultKeyStore" trustStoreRef="socialLoginKeyStore" />

    <!-- Social Login Configuration -->
    <!-- Github Login -->
    <githubLogin clientId="" clientSecret="" sslRef="authServiceSslRef"/>
    <!-- Amazon Login -->
    <oauth2Login id="amazonLogin"
                 displayName="Amazon"
                 clientId=""
                 clientSecret=""
                 responseType="code"
                 sslRef="authServiceSslRef"
                 tokenEndpointAuthMethod="client_secret_post"
                 authorizationEndpoint="https://www.amazon.com/ap/oa"
                 tokenEndpoint="https://api.amazon.com/auth/o2/token"
                 userApi="https://api.amazon.com/user/profile"
                 scope="profile"
                 userNameAttribute="name"
                 userUniqueIdAttribute="user_id"
                 website="www.amazon.com" />
    <!-- Google OIDC Login using discovery URL -->
    <oidcLogin id="googleOIDCLogin"
               displayName="Google"
               clientId=""
               clientSecret=""
               sslRef="authServiceSslRef"
               authorizationEndpoint="https://accounts.google.com/o/oauth2/v2/auth"
               tokenEndpoint="https://www.googleapis.com/oauth2/v4/token"
               jwksUri="https://www.googleapis.com/oauth2/v3/certs"
               scope="openid profile email"
               userNameAttribute="email"
               realmNameAttribute="iss"
               issuer="https://accounts.google.com"/>

    <!-- tag::webApplication[] -->
    <webApplication location="draft-guide-social-login.war" contextRoot="${app.context.root}">
        <application-bnd>
            <security-role name="users">
                <special-subject type="ALL_AUTHENTICATED_USERS"/>
            </security-role>
        </application-bnd>
    </webApplication>
    <!-- end::webApplication[] -->

    <applicationMonitor updateTrigger="mbean"/>
</server>